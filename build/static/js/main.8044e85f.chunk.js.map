{"version":3,"sources":["utils/utils.ts","features/card/card.tsx","models/results.ts","features/card/cardController.ts","store/index.ts","features/last/last.tsx","features/menu/menu.tsx","features/selectResult/selectResult.tsx","features/tryPage/tryPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["UniqueId","uniqueId","getUniqueId","instance","undefined","getInstance","useStyles","makeStyles","theme","border","selectedNumber","borderRadius","Card","result","onClick","classes","tempNumbers","i","push","numbers","arr","chunkSize","res","length","chunk","slice","sliceIntoCols","Fragment","style","textAlign","sorteio","data","map","chunck","Grid","container","spacing","item","xs","className","array","numeros","n","indexOf","Result","CardController","route","api","axios","create","baseURL","getNumbers","a","get","response","status","concurso","data_do_sorteio","parseInt","coluna_1","coluna_2","coluna_3","coluna_4","coluna_5","coluna_6","toast","msg","message","getStats","userNumbers","resultArray","post","results","this","initialResult","INITIAL_STATE","last","log","selectedResult","store","createStore","state","action","type","Number","newLast","newResult","newSelectedResult","newLog","setLast","setSelectedResult","setResult","setLog","Last","dispatch","useDispatch","React","useState","fetchResults","cardController","useEffect","ClippedDrawer","menuOpen","setMenuOpen","toggleDrawer","open","event","key","AppBar","position","appBar","Toolbar","IconButton","color","edge","Typography","variant","noWrap","component","Drawer","anchor","drawerOpen","onClose","List","ListItem","button","to","select","paddingTop","appHead","backgroundColor","connect","props","handleChange","target","value","allPrizes","InputLabel","id","Select","labelId","onChange","label","MenuItem","width","textDiv","borderStyle","height","textArea","top","left","bottom","fetchStats","handleClick","newNumbers","newNumber","textContent","index","splice","handleClear","readOnly","App","AppHeader","alignItems","justifyContent","zIndex","drawerClosed","content","paddingLeft","path","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8044e85f.chunk.js","sourcesContent":["export default class UniqueId {\r\n  uniqueId = 1;\r\n  getUniqueId = () => {\r\n    return this.uniqueId++;\r\n  };\r\n  static instance: UniqueId | undefined = undefined;\r\n  static getInstance = () => {\r\n    if (!this.instance) {\r\n      this.instance = new UniqueId();\r\n    }\r\n    return this.instance;\r\n  };\r\n}\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Result from \"../../models/results\";\r\nimport UniqueId from \"../../utils/utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  border: {\r\n    border: \"2px solid\",\r\n  },\r\n  selectedNumber: {\r\n    border: \"2px solid black\",\r\n    borderRadius: \"55px\",\r\n  },\r\n}));\r\n\r\ninterface ICard {\r\n  onClick?: (event: any) => Promise<void>;\r\n  result: Result;\r\n}\r\n\r\nconst Card: React.FC<ICard> = ({ result, onClick }: ICard) => {\r\n  const classes = useStyles();\r\n\r\n  const tempNumbers: number[] = [];\r\n\r\n  const sliceIntoCols = (arr: any[], chunkSize: number) => {\r\n    const res = [];\r\n    for (let i = 0; i < arr.length; i += chunkSize) {\r\n      const chunk = arr.slice(i, i + chunkSize);\r\n      res.push(chunk);\r\n    }\r\n    return res;\r\n  };\r\n\r\n  const isSelected = (array: number[], n: number) => {\r\n    const found = array.indexOf(n) !== -1;\r\n    return found;\r\n  };\r\n\r\n  for (let i = 1; i <= 60; i++) {\r\n    tempNumbers.push(i);\r\n  }\r\n  const numbers: number[][] = sliceIntoCols(tempNumbers, 10);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div style={{ textAlign: \"left\" }}>\r\n        <p>\r\n          {result.sorteio > 0 && `Consurso número: ${result.sorteio}`}\r\n          {result.data && ` - ${result.data}`}\r\n        </p>\r\n      </div>\r\n\r\n      {numbers.map((chunck: any) => {\r\n        return (\r\n          <Grid\r\n            container\r\n            spacing={1}\r\n            key={UniqueId.getInstance().getUniqueId()}\r\n          >\r\n            {chunck.map((item: number) => {\r\n              return (\r\n                <Grid\r\n                  onClick={onClick}\r\n                  item\r\n                  xs={1}\r\n                  className={classes.border}\r\n                  key={UniqueId.getInstance().getUniqueId()}\r\n                >\r\n                  <div\r\n                    className={\r\n                      isSelected(result.numeros, item)\r\n                        ? classes.selectedNumber\r\n                        : \"\"\r\n                    }\r\n                  >\r\n                    <p>{item}</p>\r\n                  </div>\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        );\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","export default class Result {\r\n  sorteio: number = 0;\r\n  numeros: number[] = [];\r\n  data?: Date;\r\n}\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Result from \"../../models/results\";\r\n\r\nexport default class CardController {\r\n  route: string = \"/last\";\r\n\r\n  api = axios.create({\r\n    baseURL: \"https://megasenaapi.herokuapp.com\",\r\n    //baseURL: \"http://localhost:9000\",\r\n  });\r\n\r\n  getNumbers = async (): Promise<Result> => {\r\n    const result: Result = new Result();\r\n    try {\r\n      const response = await this.api.get(this.route);\r\n\r\n      switch (response.status) {\r\n        case 200:\r\n          result.sorteio = response.data.concurso;\r\n          result.data = response.data.data_do_sorteio;\r\n          result.numeros.push(parseInt(response.data.coluna_1));\r\n          result.numeros.push(parseInt(response.data.coluna_2));\r\n          result.numeros.push(parseInt(response.data.coluna_3));\r\n          result.numeros.push(parseInt(response.data.coluna_4));\r\n          result.numeros.push(parseInt(response.data.coluna_5));\r\n          result.numeros.push(parseInt(response.data.coluna_6));\r\n          break;\r\n        case 202:\r\n          toast(\"Atualizando dados, aguarde\");\r\n          break;\r\n      }\r\n    } catch (error: any) {\r\n      const msg = (error as Error).message;\r\n      toast(msg);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  getStats = async (userNumbers: number[]): Promise<Result[]> => {\r\n    let resultArray: Result[] = [];\r\n    try {\r\n      const response = await this.api.post(\"/stats\", { results: userNumbers });\r\n\r\n      switch (response.status) {\r\n        case 200:\r\n          resultArray = response.data.map((item: any) => {\r\n            const result: Result = new Result();\r\n            result.sorteio = item.concurso;\r\n            result.data = item.data_do_sorteio;\r\n            result.numeros.push(parseInt(item.coluna_1));\r\n            result.numeros.push(parseInt(item.coluna_2));\r\n            result.numeros.push(parseInt(item.coluna_3));\r\n            result.numeros.push(parseInt(item.coluna_4));\r\n            result.numeros.push(parseInt(item.coluna_5));\r\n            result.numeros.push(parseInt(item.coluna_6));\r\n            return result;\r\n          });\r\n          break;\r\n\r\n        case 202:\r\n          toast(\"Atualizando dados, aguarde\");\r\n          break;\r\n      }\r\n    } catch (error: any) {\r\n      const msg = (error as Error).message;\r\n      toast(msg);\r\n    }\r\n    return resultArray;\r\n  };\r\n\r\n  constructor(route: string) {\r\n    this.route = route;\r\n  }\r\n}\r\n","import { createStore } from \"redux\";\nimport Result from \"../models/results\";\n\nexport const initialResult = {\n  sorteio: 1,\n  numeros: [],\n};\n\nconst INITIAL_STATE = {\n  last: 1,\n  log: \"\",\n  userNumbers: initialResult,\n  selectedResult: initialResult,\n};\n\nconst reducer = (state: any = INITIAL_STATE, action: any) => {\n  if (action.type === \"SET_LAST\") {\n    return { ...state, last: Number(action.newLast) };\n  }\n  if (action.type === \"SET_USERNUMBERS\") {\n    return { ...state, userNumbers: action.newResult as Result };\n  }\n  if (action.type === \"SET_SELECTED\") {\n    return { ...state, selectedResult: action.newSelectedResult as Result };\n  }\n  if (action.type === \"SET_LOG\") {\n    return { ...state, log: action.newLog };\n  }\n  return state;\n};\n\nconst store = createStore(reducer);\n\nexport const setLast = (newLast: number) => {\n  return {\n    type: \"SET_LAST\",\n    newLast,\n  };\n};\n\nexport const setSelectedResult = (newSelectedResult: Result) => {\n  return {\n    type: \"SET_SELECTED\",\n    newSelectedResult,\n  };\n};\n\nexport const setResult = (newResult: Result) => {\n  return {\n    type: \"SET_USERNUMBERS\",\n    newResult,\n  };\n};\n\nexport const setLog = (newLog: string) => {\n  return {\n    type: \"SET_LOG\",\n    newLog,\n  };\n};\nexport default store;\n","import Card from \"../card/card\";\nimport CardController from \"../card/cardController\";\nimport React from \"react\";\nimport Result from \"../../models/results\";\nimport { setLast } from \"../../store\";\nimport { useDispatch } from \"react-redux\";\n\nconst Last = () => {\n  const dispatch = useDispatch();\n  const [result, setResult] = React.useState<Result>({\n    sorteio: 0,\n    numeros: [],\n  });\n\n  const fetchResults = async () => {\n    const cardController = new CardController(\"/last\");\n    const results = await cardController.getNumbers();\n    dispatch(setLast(results.sorteio));\n    setResult(results);\n  };\n\n  React.useEffect(() => {\n    fetchResults();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return <Card result={result}></Card>;\n};\n\nexport default Last;\n","import { AppBar, Typography } from \"@material-ui/core\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { IconButton } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\ninterface IMenu {\n  classes: any;\n}\n\nconst ClippedDrawer: React.FC<IMenu> = ({ classes }: IMenu) => {\n  const [menuOpen, setMenuOpen] = React.useState(false);\n\n  const toggleDrawer =\n    (open: boolean) => (event: React.KeyboardEvent | React.MouseEvent) => {\n      if (\n        event.type === \"keydown\" &&\n        ((event as React.KeyboardEvent).key === \"Tab\" ||\n          (event as React.KeyboardEvent).key === \"Shift\")\n      ) {\n        return;\n      }\n      setMenuOpen(open);\n    };\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={toggleDrawer(true)}\n            edge=\"start\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap component=\"div\">\n            Mega Sena\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        anchor={\"left\"}\n        className={classes.drawerOpen}\n        open={menuOpen}\n        onClose={toggleDrawer(false)}\n      >\n        <Toolbar />\n        <List>\n          <ListItem button key={\"Resultado mais recente\"}>\n            <Link to=\"/last\">Resultado mais recente</Link>\n          </ListItem>\n          <ListItem button key={\"Selecionar resultado\"}>\n            <Link to=\"/selectResult\">Selecionar resultado</Link>\n          </ListItem>\n          <ListItem button key={\"Praticar\"}>\n            <Link to=\"/try\">Praticar</Link>\n          </ListItem>\n        </List>\n      </Drawer>\n    </React.Fragment>\n  );\n};\n\nexport default ClippedDrawer;\n","import InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { initialResult, setLast, setSelectedResult } from \"../../store\";\r\nimport Card from \"../card/card\";\r\nimport CardController from \"../card/cardController\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  select: {\r\n    textAlign: \"left\",\r\n    paddingTop: 30,\r\n  },\r\n  appHead: {\r\n    backgroundColor: \"#FDFDD7\",\r\n    color: \"#DF977E\",\r\n  },\r\n}));\r\n\r\nconst SelectResult = (props: any) => {\r\n  const classes = useStyles();\r\n  const last = props.last;\r\n  const selectedResult = props.selectedResult;\r\n  const dispatch = props.dispatch;\r\n\r\n  const handleChange = async (event: any) => {\r\n    const cardController = new CardController(`/results/${event.target.value}`);\r\n    const results = await cardController.getNumbers();\r\n    dispatch(setSelectedResult(results));\r\n  };\r\n\r\n  const fetchResults = async () => {\r\n    if (last === 1 || selectedResult === initialResult) {\r\n      const cardController = new CardController(\"/last\");\r\n      const results = await cardController.getNumbers();\r\n      dispatch(setLast(results.sorteio));\r\n      dispatch(setSelectedResult(results));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchResults();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const allPrizes = [];\r\n  for (let i = last; i >= 1; i--) {\r\n    allPrizes.push(i);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.select}>\r\n        <InputLabel\r\n          id=\"demo-simple-select-standard-label\"\r\n          className={classes.appHead}\r\n        >\r\n          Selecione o consurso\r\n        </InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-standard-label\"\r\n          id=\"demo-simple-select-standard\"\r\n          value={selectedResult.sorteio}\r\n          onChange={handleChange}\r\n          label=\"Concurso\"\r\n          className={classes.appHead}\r\n        >\r\n          <MenuItem value=\"\" key={0}>\r\n            <em>-</em>\r\n          </MenuItem>\r\n          {allPrizes.map((i) => (\r\n            <MenuItem value={i} key={i}>\r\n              {i}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </div>\r\n      <Card result={selectedResult}></Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default connect((state) => ({\r\n  last: (state as any).last,\r\n  selectedResult: (state as any).selectedResult,\r\n}))(SelectResult);\r\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\nimport Card from \"../card/card\";\nimport CardController from \"../card/cardController\";\nimport { connect } from \"react-redux\";\nimport { setLast, setResult, setLog } from \"../../store\";\nimport { Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    paddingTop: 10,\n  },\n  button: {\n    width: 100,\n  },\n  textDiv: {\n    paddingTop: 10,\n    textAlign: \"left\",\n    borderStyle: \"solid\",\n    position: \"relative\",\n    height: 400,\n  },\n  textArea: {\n    top: \"1%\",\n    left: \"1%\",\n    bottom: \"1%\",\n    position: \"absolute\",\n    width: \"96%\",\n  },\n}));\n\nconst TryPage = (props: any) => {\n  const classes = useStyles();\n  const dispatch = props.dispatch;\n  const userNumbers = props.userNumbers;\n  const log = props.log;\n\n  const fetchResults = async () => {\n    if (userNumbers.sorteio === 1) {\n      const cardController = new CardController(\"/last\");\n      const results = await cardController.getNumbers();\n      dispatch(setLast(results.sorteio));\n      const newResult = {\n        ...userNumbers,\n        sorteio: Number(results.sorteio) + 1,\n      };\n      dispatch(setResult(newResult));\n    }\n  };\n\n  const fetchStats = async () => {\n    let newLog = \"\";\n    if (userNumbers.numeros.length > 0) {\n      const cardController = new CardController(\"/stats\");\n      const results = await cardController.getStats(userNumbers.numeros);\n\n      newLog = `Total de concursos: ${results.length}`;\n      results.map((item) => {\n        newLog =\n          newLog +\n          `\\n concurso: ${item.sorteio}  [${item.numeros[0]}] [${item.numeros[1]}] [${item.numeros[2]}] [${item.numeros[3]}] [${item.numeros[4]}] [${item.numeros[5]}]`;\n        return null;\n      });\n    }\n\n    dispatch(setLog(newLog));\n  };\n\n  React.useEffect(() => {\n    fetchResults();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleClick = async (event: any): Promise<void> => {\n    const newNumbers = userNumbers.numeros;\n    const newNumber = Number(event.target.textContent);\n\n    const index = newNumbers.indexOf(newNumber);\n\n    if (index !== -1) {\n      newNumbers.splice(index, 1);\n    } else if (newNumbers.length === 6) {\n      toast(\"Selecione apenas 6 números\");\n      return;\n    } else {\n      newNumbers.push(newNumber);\n    }\n\n    const newResult = { ...userNumbers, numeros: newNumbers };\n    dispatch(setResult(newResult));\n    if (newNumbers.length === 0) {\n      dispatch(setLog(\"\"));\n    }\n    fetchStats();\n  };\n\n  const handleClear = async (event: any): Promise<void> => {\n    dispatch(setLog(\"\"));\n    dispatch(setResult({ ...userNumbers, numeros: [] }));\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classes.select}>\n        <Card result={userNumbers} onClick={handleClick}></Card>\n        <Grid container spacing={1}>\n          <Grid item xs={1}>\n            <button onClick={handleClear} className={classes.button}>\n              Limpar\n            </button>\n          </Grid>\n        </Grid>\n      </div>\n      <div className={classes.textDiv}>\n        <textarea\n          className={classes.textArea}\n          value={log}\n          readOnly={true}\n        ></textarea>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default connect((state) => ({\n  last: (state as any).last,\n  userNumbers: (state as any).userNumbers,\n  log: (state as any).log,\n}))(TryPage);\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Last from \"./features/last/last\";\r\nimport ClippedDrawer from \"./features/menu/menu\";\r\nimport SelectResult from \"./features/selectResult/selectResult\";\r\nimport TryPage from \"./features/tryPage/tryPage\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  App: {\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#FDFDD7\",\r\n  },\r\n\r\n  AppHeader: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    color: \"#DF977E\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    zIndex: 10,\r\n  },\r\n  drawerClosed: {\r\n    width: 5,\r\n    zIndex: 10,\r\n  },\r\n  appBar: {\r\n    zIndex: 2000,\r\n  },\r\n  content: {\r\n    paddingTop: 50,\r\n    paddingLeft: 40,\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.App}>\r\n      <Provider store={store}>\r\n        <header className={classes.AppHeader}>\r\n          <Router>\r\n            <ClippedDrawer classes={classes}></ClippedDrawer>\r\n            <div className={classes.content}>\r\n              <Switch>\r\n                <Route path=\"/last\">\r\n                  <Last />\r\n                </Route>\r\n                <Route path=\"/selectResult\">\r\n                  <SelectResult />\r\n                </Route>\r\n                <Route path=\"/try\">\r\n                  <TryPage />\r\n                </Route>\r\n              </Switch>\r\n            </div>\r\n          </Router>\r\n        </header>\r\n        <ToastContainer\r\n          position=\"bottom-center\"\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick={false}\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}